{"ast":null,"code":"var _jsxFileName = \"/Users/jadedsouza/Desktop/group09skodawgs/src/Bars.js\";\nimport React, { Component } from 'react';\nimport * as d3c from 'd3-collection';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport './index.css'; //import css file!\n\nimport { MDBCol } from \"mdbreact\";\nimport 'firebase/database';\nimport firebase from 'firebase/app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class BarsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateSelection = selection => {\n      let tempAry = this.state.selectedZipcode;\n      console.log(selection, \"selection\");\n\n      if (this.state.selectedZipcode.length > 0) {\n        let checks = 0; // Loop through each\n\n        for (var i = 0; i < this.state.selectedZipcode.length; i++) {\n          // Verify whether there's a match\n          if (this.state.selectedZipcode[i] != selection) {\n            checks++;\n          } // If no matches, add it to the state array\n\n\n          if (checks == this.state.selectedZipcode.length) {\n            tempAry.push(selection);\n            this.setState({\n              selectedZipcode: tempAry\n            });\n          }\n        }\n      } else {\n        // Automatically add if array is empty\n        tempAry.push(selection);\n        this.setState({\n          selectedZipcode: tempAry\n        });\n      } //let zipOption = this.props.barState.selectedZipcode;\n\n\n      console.log(this.state, \"this,state\"); //1. go through all of the checkboxes and put it into a map.\n      //2. get each boolean isChecked value and put it into an array\n      //3. if a boolean value is false, use its index, get the zipcode using \n\n      console.log(this.state.selectedZipcode, 'selectedZipcode');\n    };\n\n    this.updateBookmarks = bar => {\n      let tempBook = this.state.bookmarks; // If bar item received has clicked as false (from unchecking a Bookmark)\n\n      if (!bar.clicked) {\n        // Loop through each bookmark until it matches bar\n        for (var i = 0; i < this.state.bookmarks.length; i++) {\n          // Remove when match is found\n          if (this.state.bookmarks[i].name == bar.name) {\n            tempBook.splice(i, 1);\n            this.setState({\n              bookmarks: tempBook\n            });\n          }\n        }\n      } else {\n        // If there is anything in the state\n        if (this.state.bookmarks.length > 0) {\n          let checks = 0; // Loop through each\n\n          for (var i = 0; i < this.state.bookmarks.length; i++) {\n            // Verify whether there's a match\n            if (this.state.bookmarks[i].name != bar.name) {\n              checks++;\n            } // If no matches, add it to the state array\n\n\n            if (checks == this.state.bookmarks.length) {\n              tempBook.push(bar);\n              this.setState({\n                bookmarks: tempBook\n              });\n            } // console.log(checks, 'checks');\n\n          }\n        } else {\n          // Automatically add if array is empty\n          tempBook.push(bar);\n          this.setState({\n            bookmarks: tempBook\n          });\n        }\n      }\n    };\n\n    this.updateSelection = this.updateSelection.bind(this);\n    this.updateBookmarks = this.updateBookmarks.bind(this);\n    this.state = {\n      bar: [],\n      keys: [],\n      selectedZipcode: [],\n      bookmarks: [] //isChecked: false\n\n    };\n  }\n\n  handleChange(event) {\n    let field = event.target.name; // which input\n\n    let value = event.target.value; // what value\n\n    let changes = {}; // object to hold changes\n\n    changes[field] = value; // change this field\n\n    this.setState(changes); // update state\n  }\n\n  componentDidMount() {\n    // d3.csv('data/bars.csv').then((d) => {\n    //     this.setState({ bar: d, keys: d3c.keys(d[0]) });\n    //     console.log(\"indidmount rn: \", this.state);\n    // });\n    this.barJSON = firebase.database().ref('bars');\n    this.barJSON.on('value', snapshot => {\n      let tweets = snapshot.val();\n      let d = Object.values(tweets);\n      let k = Object.keys(d[0]);\n      this.setState({\n        bar: d,\n        keys: k\n      });\n    }); // this.barsRef = firebase.database().ref('bars');\n    // // When the \"tweets\" *value* changes, update the state appropriately (`tweets`)\n    // this.barsRef.on('value', (snapshot) => { \n    //     let bar = snapshot.val();\n    //     this.setState({bar: bar});\n    //     console.log(\"In firebase did mount: \" + this.state );\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BarIntroText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ZipSelection, {\n        barState: this.state,\n        updateSelection: this.updateSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RowCheckboxes, {\n        barState: this.state,\n        updateSelection: this.updateSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(BarCardRow, {\n          barState: this.state,\n          bookmarkCallback: this.updateBookmarks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Bookmarks, {\n          bookState: this.state,\n          bookmarkCallback: this.updateBookmarks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass BarIntroText extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Explore and Bookmark Local Bars Near You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"While you can always make drinks at home, going out to local bars is a great way to save time while also supporting the businesses around your area. Using the search bar, look up your area code to see if there are any bars we recommend near you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass SearchBar extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(MDBCol, {\n      md: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"header-search\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Search bars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-pink-3 active-pink-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"Search\",\n          \"aria-label\": \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ZipCodes extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: this.props.value.zipcode,\n      children: this.props.value.zipcode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ZipCodeCheckBox extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n      //     <form>\n      //         <label> Select Neighborhoods:\n      //     <input name=\"checkZip\"value=\"hi\" id=\"checkbox\" onChange={this.handleClick}>\n      //         {this.zipArray}\n      //     </input>\n      //     </label>\n      // </form>\n      _jsxDEV(\"div\", {\n        className: \"zipcode-checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: this.props.value.zipcode,\n          id: this.props.value.zipcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this), this.props.value.zipcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nclass RowCheckboxes extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = item => {\n      this.props.barState.isChecked = !this.props.barState.isChecked; // console.log(this.props.barState.isChecked, this.props.barState.bar.name, \"ive been clicked\");\n      // if (this.props.barState.isChecked == true) {\n      //     this.props.updateSelection(item.target.value);\n      //     //this.selectedZipcode.push(item.target.value);\n      // } else { \n      //     this.props.updateSelection('');\n      //     this.selectedZipcode = '';\n      // }\n\n      console.log(item.target.value, 'checkbox val');\n      this.props.updateSelection(item.target.value);\n    };\n  }\n\n  render() {\n    let zipArray = []; // console.log(this.props.barState.bar, \"currently in RowCheckboxes\");\n\n    this.props.barState.bar.map(item => {\n      if (!zipArray.includes(item.zipcode)) {\n        zipArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zipcode-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: item.zipcode,\n            id: item.zipcode,\n            onChange: this.handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), item.zipcode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 32\n        }, this)); //console.log(item.zipcode);\n        //console.log(item);\n      }\n\n      return zipArray;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: zipArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ZipSelection extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = item => {\n      this.props.updateSelection(item.target.value);\n      this.selectedZipcode = item.target.value;\n    };\n  }\n\n  render() {\n    let zipArray = []; // console.log(this.props.barState.bar);\n\n    this.props.barState.bar.map(item => {\n      if (!zipArray.includes(item.zipcode)) {\n        zipArray.push( /*#__PURE__*/_jsxDEV(ZipCodes, {\n          value: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 31\n        }, this)); //console.log(item.zipcode);\n        //console.log(item);\n      }\n\n      return zipArray;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zip-selection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid ingredients-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titles\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-9\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"moods\",\n                className: \"main-title\",\n                children: [\"Choose Your Neighborhood By Zipcode\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"types\",\n                    id: \"types\",\n                    onChange: this.handleClick,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"DEFAULT\",\n                      children: '-- select a neighborhood --'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 45\n                    }, this), zipArray]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass BarCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleButtonClick = item => {\n      //this.props.updateSelection(item.target.value);\n      //this.selectedZipcode = item.target.value;\n      // console.log(\"in handle button clcik\" + item);\n      //this.props.updateBookmarks(item);\n      let barsRef = firebase.database().ref('bars');\n      let bookmarks = barsRef.child(this.props.id + '/bookmarks'); //console.log(this.props);\n      // Issue a transaction on the number of likes to increase it by 1\n\n      bookmarks.transaction(d => d + 1); //console.log(barsRef.child(this.props.id + '/address'));\n\n      console.log(this.props.bookies, 'bookies'); // console.log(this.props.bar, \"bar\");\n      // CALLBACKS for bookmarks\n\n      this.props.bar['clicked'] = true;\n      this.props.bookCardCall(this.props.bar); // bookmark = (<Bookmarks/>);\n      // this.props.bookmarksSlide({bookmarked: bookmark});\n    };\n  }\n\n  render() {\n    //console.log(this.props.bar);\n    const mystyle = {\n      border: '1px white',\n      marginTop: '10px',\n      marginBottom: '10px',\n      float: 'center'\n    };\n    const buttonStyle = {\n      marginLeft: '10px',\n      color: '#9A0A35'\n    };\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: mystyle,\n      children: [/*#__PURE__*/_jsxDEV(CardImg, {\n        className: \"bar-card-images\",\n        src: this.props.bar.img,\n        alt: this.props.bar.imgalt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [\" Bar Name: \", this.props.bar.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n          children: [\" Zipcode: \", this.props.bar.zipcode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: [\" Address: \", this.props.bar.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: this.props.bar.website,\n            target: \"_blank\",\n            children: 'Visit Website'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: buttonStyle,\n          onClick: this.handleButtonClick,\n          children: [\"Cheers (feel free to spam!): \", this.props.bookies]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass BarCardRow extends Component {\n  constructor(props) {\n    super(props);\n    this.bookmarkCallback = this.bookmarkCallback.bind(this);\n  }\n\n  updateBookmarks(cardId) {\n    // Create a reference to the number of likes\n    let barsRef = firebase.database().ref('bars');\n    let bookmarks = barsRef.child(cardId + '/bookmarks'); // Issue a transaction on the number of likes to increase it by 1\n\n    bookmarks.transaction(d => d + 1);\n  }\n\n  bookmarkCallback(bar) {\n    console.log(bar, ' barcard called back!'); // this.state.barBooked = bar;\n    // console.log(this.props.barState.key, 'state');\n\n    this.props.bookmarkCallback(bar);\n  }\n\n  render() {\n    // console.log(this.props.barState.bar, 'barstate.bar');\n    let barCardArray = this.props.barState.bar.map(item => {\n      let barOption = this.props.barState.selectedZipcode; // console.log(item.bookmarks);\n      // console.log(item.name);\n\n      if (barOption.includes(item.zipcode)) {\n        //console.log(\"in barCardRow rn! \" + {item})\n        return /*#__PURE__*/_jsxDEV(BarCard, {\n          bar: item,\n          update: item => this.updateBookmarks(item.id),\n          id: item.id,\n          bookies: item.bookmarks,\n          bookCardCall: this.bookmarkCallback\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }, this); // in barcardrow it should look to see what options have been selected\n        //based on those, it renders the correct ones. \n      }\n    });\n    let topThreeArray = new Map();\n    topThreeArray = this.props.barState.bar.map(item => {\n      var book = item.bookmarks;\n      let names = item.name;\n      return {\n        [names]: book\n      }; //could do top three filtering here itself\n    }); // console.log(topThreeArray, \"topthreearray,book\");\n    // console.log(name); \n    // let sortedKeys = Object.keys(topThreeArray.book).sort((a, b) => { \n    //     return this.state.tweets[b].timestamp - this.state.tweets[a].timestamp;\n    //     console.log(topThreeArray.book[b]);\n    // })\n    // let topThreeDisplay = [];\n    // let sortedKeys = Object.keys(topThreeArray).sort(topThreeArray.book);\n    // console.log(sortedKeys, \"sortedKeys\");\n\n    let barHeader = \"\";\n    let zipOption = this.props.barState.selectedZipcode;\n\n    if (zipOption === \"\" || zipOption === \"DEFAULT\" || zipOption.length == 0) {\n      barHeader = \"\";\n    } else {\n      barHeader = \"Bars In Your Area\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-chosen-random\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: barHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this), barCardArray]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Bookmarks extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = item => {\n      // console.log(item.target.id, this.props.bookState.bookmarks, 'clicked to remove');\n      let removeBar = this.props.bookState.bookmarks.map(bookmark => {\n        if (bookmark.id == item.target.id) {\n          console.log(bookmark.clicked, 'clicked');\n          bookmark.clicked = false;\n          return bookmark;\n        }\n      });\n      this.props.bookmarkCallback(removeBar[0]);\n      console.log(removeBar, 'remove this');\n    };\n  }\n\n  render() {\n    let bookArr = this.props.bookState.bookmarks.map(item => {\n      let name = item.name;\n      let link = item.website;\n      let id = item.id;\n      let address = item.address;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: id,\n        children: [\"Bar ~ \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: link,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 39\n        }, this), \" ~ \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 21\n      }, this);\n    });\n    let bookHeader = \"\";\n    let bookControl = \"\";\n\n    if (this.props.bookState.bookmarks.length == 0) {\n      bookHeader = \"\";\n      bookControl = \"\";\n    } else {\n      bookHeader = \"Bookmarks\";\n      bookControl = \"(select bar to remove)\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookmarks-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: bookHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: bookControl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebox\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"links-side-list\",\n          id: \"links-list\",\n          onClick: this.handleClick,\n          children: bookArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }, this);\n  }\n\n} // class TopThree extends Component { \n//     render() { \n//         return (); \n//     }\n// }","map":{"version":3,"sources":["/Users/jadedsouza/Desktop/group09skodawgs/src/Bars.js"],"names":["React","Component","d3c","d3","_","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","MDBCol","firebase","BarsPage","constructor","props","updateSelection","selection","tempAry","state","selectedZipcode","console","log","length","checks","i","push","setState","updateBookmarks","bar","tempBook","bookmarks","clicked","name","splice","bind","keys","handleChange","event","field","target","value","changes","componentDidMount","barJSON","database","ref","on","snapshot","tweets","val","d","Object","values","k","render","BarIntroText","SearchBar","ZipCodes","zipcode","ZipCodeCheckBox","RowCheckboxes","handleClick","item","barState","isChecked","zipArray","map","includes","ZipSelection","id","BarCard","handleButtonClick","barsRef","child","transaction","bookies","bookCardCall","mystyle","border","marginTop","marginBottom","float","buttonStyle","marginLeft","color","img","imgalt","address","website","BarCardRow","bookmarkCallback","cardId","barCardArray","barOption","topThreeArray","Map","book","names","barHeader","zipOption","Bookmarks","removeBar","bookState","bookmark","bookArr","link","bookHeader","bookControl"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3c from 'd3-collection';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button\n} from 'reactstrap';\nimport './index.css'; //import css file!\nimport { MDBCol } from \"mdbreact\";\nimport 'firebase/database';\nimport firebase from 'firebase/app';\n\n\nexport class BarsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.updateSelection = this.updateSelection.bind(this);\n        this.updateBookmarks = this.updateBookmarks.bind(this);\n        this.state = {\n            bar: [],\n            keys: [],\n            selectedZipcode: [],\n            bookmarks: []\n            //isChecked: false\n        };\n    }\n    updateSelection = (selection) => {\n        let tempAry = this.state.selectedZipcode;\n        console.log(selection, \"selection\");\n        if (this.state.selectedZipcode.length > 0) {\n            let checks = 0;\n            // Loop through each\n            for (var i = 0; i < this.state.selectedZipcode.length; i++) {\n                // Verify whether there's a match\n                if (this.state.selectedZipcode[i] != selection) {\n                    checks++;\n                }\n                // If no matches, add it to the state array\n                if (checks == this.state.selectedZipcode.length) {\n                    tempAry.push(selection);\n                    this.setState({ selectedZipcode: tempAry });\n                }\n            }\n        } else {\n            // Automatically add if array is empty\n            tempAry.push(selection);\n            this.setState({ selectedZipcode: tempAry });\n        }\n        //let zipOption = this.props.barState.selectedZipcode;\n        console.log(this.state, \"this,state\");\n        //1. go through all of the checkboxes and put it into a map.\n        //2. get each boolean isChecked value and put it into an array\n        //3. if a boolean value is false, use its index, get the zipcode using \n        console.log(this.state.selectedZipcode, 'selectedZipcode');\n    }\n\n    updateBookmarks = (bar) => {\n        let tempBook = this.state.bookmarks;\n\n        // If bar item received has clicked as false (from unchecking a Bookmark)\n        if (!bar.clicked) {\n            // Loop through each bookmark until it matches bar\n            for (var i = 0; i < this.state.bookmarks.length; i++) {\n                // Remove when match is found\n                if (this.state.bookmarks[i].name == bar.name) {\n                    tempBook.splice(i, 1);\n                    this.setState( { bookmarks: tempBook });\n                }\n            }\n        } else {\n            // If there is anything in the state\n            if (this.state.bookmarks.length > 0) {\n                let checks = 0;\n                // Loop through each\n                for (var i = 0; i < this.state.bookmarks.length; i++) {\n                    // Verify whether there's a match\n                    if (this.state.bookmarks[i].name != bar.name) {\n                        checks++;\n                    }\n                    // If no matches, add it to the state array\n                    if (checks == this.state.bookmarks.length) {\n                        tempBook.push(bar);\n                        this.setState({ bookmarks: tempBook });\n                    }\n                    // console.log(checks, 'checks');\n                }\n            } else {\n                // Automatically add if array is empty\n                tempBook.push(bar);\n                this.setState({ bookmarks: tempBook });\n            }\n        }\n    }\n\n    handleChange(event) {\n        let field = event.target.name; // which input\n        let value = event.target.value; // what value\n\n        let changes = {}; // object to hold changes\n        changes[field] = value; // change this field\n        this.setState(changes); // update state\n    }\n\n    componentDidMount() {\n        // d3.csv('data/bars.csv').then((d) => {\n        //     this.setState({ bar: d, keys: d3c.keys(d[0]) });\n        //     console.log(\"indidmount rn: \", this.state);\n        // });\n        this.barJSON = firebase.database().ref('bars')\n        this.barJSON.on('value', (snapshot) => {\n            let tweets = snapshot.val();\n            let d = Object.values(tweets);\n            let k = Object.keys(d[0]);\n\n\n            this.setState({ bar: d, keys: k });\n        });\n        // this.barsRef = firebase.database().ref('bars');\n\n        // // When the \"tweets\" *value* changes, update the state appropriately (`tweets`)\n        // this.barsRef.on('value', (snapshot) => { \n        //     let bar = snapshot.val();\n        //     this.setState({bar: bar});\n        //     console.log(\"In firebase did mount: \" + this.state );\n        // });\n\n    }\n    render() {\n\n        return (\n            <div>\n                <BarIntroText />\n                <ZipSelection barState={this.state} updateSelection={this.updateSelection} />\n                <RowCheckboxes barState={this.state} updateSelection={this.updateSelection} />\n                <div> <BarCardRow barState={this.state} bookmarkCallback={this.updateBookmarks}/>\n                <Bookmarks bookState={this.state} bookmarkCallback={this.updateBookmarks}/>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nclass BarIntroText extends Component {\n    render() {\n        return (\n            <div>\n                <h2> Explore and Bookmark Local Bars Near You</h2>\n                <p>\n                    While you can always make drinks at home, going out to local bars is a great way to save time while also supporting the businesses around your area. Using the search bar, look up your area code to see if there are any bars we recommend near you.\n                </p>\n            </div>\n        );\n    }\n}\n\nclass SearchBar extends Component {\n    render() {\n        return (\n            <MDBCol md=\"6\">\n                <label htmlFor=\"header-search\">\n                    <span className=\"visually-hidden\">Search bars</span>\n                </label>\n                <div className=\"active-pink-3 active-pink-4 mb-4\">\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\n                </div>\n            </MDBCol>\n        );\n    }\n}\n\nclass ZipCodes extends Component {\n    render() {\n        return (\n            <option value={(this.props.value.zipcode)} >\n                {/* {console.log(\"currently in zipcode comp: \" + this.props.value.zipcode)} */}\n                {this.props.value.zipcode}\n            </option>\n        );\n    }\n}\n\nclass ZipCodeCheckBox extends Component {\n    render() {\n\n        return (\n            //     <form>\n            //         <label> Select Neighborhoods:\n            //     <input name=\"checkZip\"value=\"hi\" id=\"checkbox\" onChange={this.handleClick}>\n\n            //         {this.zipArray}\n            //     </input>\n            //     </label>\n            // </form>\n            <div className=\"zipcode-checkbox\">\n                <input type=\"checkbox\" value={(this.props.value.zipcode)} id={(this.props.value.zipcode)}\n                />{this.props.value.zipcode}\n            </div>\n        );\n\n    }\n}\n\nclass RowCheckboxes extends Component {\n    handleClick = (item) => {\n        this.props.barState.isChecked = !this.props.barState.isChecked;\n        // console.log(this.props.barState.isChecked, this.props.barState.bar.name, \"ive been clicked\");\n        // if (this.props.barState.isChecked == true) {\n        //     this.props.updateSelection(item.target.value);\n        //     //this.selectedZipcode.push(item.target.value);\n        // } else { \n        //     this.props.updateSelection('');\n        //     this.selectedZipcode = '';\n        // }\n        console.log(item.target.value, 'checkbox val');\n        this.props.updateSelection(item.target.value);\n\n    }\n    render() {\n        let zipArray = [];\n        // console.log(this.props.barState.bar, \"currently in RowCheckboxes\");\n        this.props.barState.bar.map((item) => {\n            if (!zipArray.includes(item.zipcode)) {\n                zipArray.push( <div className=\"zipcode-checkbox\">\n                <input type=\"checkbox\" value={(item.zipcode)} id={(item.zipcode)}onChange={this.handleClick} />{item.zipcode}\n            </div>);\n                //console.log(item.zipcode);\n                //console.log(item);\n            }\n            return zipArray;\n        });\n        return (\n            <div >\n                {zipArray}\n            </div>\n        );\n    }\n}\n\nclass ZipSelection extends Component {\n\n    handleClick = (item) => {\n        this.props.updateSelection(item.target.value);\n        this.selectedZipcode = item.target.value;\n\n    }\n\n    render() {\n        let zipArray = [];\n        // console.log(this.props.barState.bar);\n        this.props.barState.bar.map((item) => {\n            if (!zipArray.includes(item.zipcode)) {\n                zipArray.push(<ZipCodes value={item} key={item.id} />);\n                //console.log(item.zipcode);\n                //console.log(item);\n            }\n            return zipArray;\n        });\n\n        return (\n            <div className='zip-selection'>\n                <div className='container-fluid ingredients-box'>\n                    <div className=\"titles\">\n                        <div className=\"col-lg-9\">\n                            <form>\n                                <label htmlFor=\"moods\" className=\"main-title\">\n                                    Choose Your Neighborhood By Zipcode\n                                    <div >\n                                        <select name=\"types\" id=\"types\" onChange={this.handleClick}>\n                                            <option value=\"DEFAULT\">{'-- select a neighborhood --'}</option>\n                                            {zipArray}\n                                        </select>\n                                    </div>\n\n                                </label><br />\n                                <br />\n\n\n                            </form>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass BarCard extends Component {\n    handleButtonClick = (item) => {\n        //this.props.updateSelection(item.target.value);\n        //this.selectedZipcode = item.target.value;\n        \n        // console.log(\"in handle button clcik\" + item);\n        //this.props.updateBookmarks(item);\n        let barsRef = firebase.database().ref('bars');\n        let bookmarks = barsRef.child(this.props.id + '/bookmarks');\n        //console.log(this.props);\n        // Issue a transaction on the number of likes to increase it by 1\n        bookmarks.transaction((d) => d + 1);\n        //console.log(barsRef.child(this.props.id + '/address'));\n        console.log(this.props.bookies, 'bookies');\n        // console.log(this.props.bar, \"bar\");\n\n        // CALLBACKS for bookmarks\n        this.props.bar['clicked'] = true;\n        this.props.bookCardCall(this.props.bar);\n        // bookmark = (<Bookmarks/>);\n        // this.props.bookmarksSlide({bookmarked: bookmark});\n    }\n\n    render() {\n        //console.log(this.props.bar);\n        const mystyle = {\n            border: '1px white',\n            marginTop: '10px',\n            marginBottom: '10px',\n            float: 'center'\n        };\n        const buttonStyle = { marginLeft: '10px', color: '#9A0A35'};\n        return (\n            <Card style={mystyle}>\n                <CardImg className=\"bar-card-images\" src={this.props.bar.img} alt={this.props.bar.imgalt} />\n                <CardBody>\n                    <CardTitle> Bar Name: {this.props.bar.name}</CardTitle>\n                    <CardSubtitle> Zipcode: {this.props.bar.zipcode}</CardSubtitle>\n                    <CardText> Address: {this.props.bar.address}</CardText>\n                    <Button><a href={this.props.bar.website} target=\"_blank\">{'Visit Website'}</a></Button>\n                    <Button style={buttonStyle} onClick={this.handleButtonClick}>Cheers (feel free to spam!): {this.props.bookies}</Button>\n                </CardBody>\n            </Card>\n\n        );\n    }\n}\n\nclass BarCardRow extends Component {\n    constructor(props) {\n        super(props);\n        this.bookmarkCallback = this.bookmarkCallback.bind(this);\n    }\n    updateBookmarks(cardId) {\n        // Create a reference to the number of likes\n        let barsRef = firebase.database().ref('bars');\n        let bookmarks = barsRef.child(cardId + '/bookmarks');\n        // Issue a transaction on the number of likes to increase it by 1\n        bookmarks.transaction((d) => d + 1);\n    }\n\n    bookmarkCallback(bar) {\n        console.log(bar, ' barcard called back!');\n        // this.state.barBooked = bar;\n        // console.log(this.props.barState.key, 'state');\n        this.props.bookmarkCallback(bar);\n    }\n\n    render() {\n        // console.log(this.props.barState.bar, 'barstate.bar');\n        let barCardArray = this.props.barState.bar.map((item) => {\n            let barOption = this.props.barState.selectedZipcode;\n            // console.log(item.bookmarks);\n            // console.log(item.name);\n            \n            if (barOption.includes(item.zipcode)) {\n                //console.log(\"in barCardRow rn! \" + {item})\n                \n                return (<BarCard bar={item} key={item.id} update={(item) => this.updateBookmarks(item.id)} \n                                id={item.id} key={item} bookies={item.bookmarks} bookCardCall={this.bookmarkCallback}/>);\n// in barcardrow it should look to see what options have been selected\n//based on those, it renders the correct ones. \n            }\n\n        })\n        let topThreeArray = new Map();\n        topThreeArray = this.props.barState.bar.map((item) => {\n            var book = item.bookmarks;\n            let names = item.name;\n            return ({ [names]: book });\n            //could do top three filtering here itself\n        })\n        // console.log(topThreeArray, \"topthreearray,book\");\n        // console.log(name); \n\n        // let sortedKeys = Object.keys(topThreeArray.book).sort((a, b) => { \n        //     return this.state.tweets[b].timestamp - this.state.tweets[a].timestamp;\n        //     console.log(topThreeArray.book[b]);\n        // })\n        // let topThreeDisplay = [];\n        // let sortedKeys = Object.keys(topThreeArray).sort(topThreeArray.book);\n        // console.log(sortedKeys, \"sortedKeys\");\n        let barHeader = \"\";\n        let zipOption = this.props.barState.selectedZipcode;\n        \n        if (zipOption === \"\" || zipOption === \"DEFAULT\" || zipOption.length == 0) {\n            barHeader = \"\";\n        }\n        else {\n            barHeader = \"Bars In Your Area\"\n        }\n        return (\n            <div className=\"bar-chosen-random\">\n                <h2>{barHeader}</h2>\n                {barCardArray}\n            </div>\n        );\n    }\n}\n\n\nclass Bookmarks extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     // this.state = {\n    //     //     books = this.props.bookState.bookmarks\n    //     // }\n    // }\n    handleClick = (item) => {\n        // console.log(item.target.id, this.props.bookState.bookmarks, 'clicked to remove');\n        let removeBar = this.props.bookState.bookmarks.map((bookmark) => {\n            \n            if (bookmark.id == item.target.id) {\n                console.log(bookmark.clicked, 'clicked');\n                bookmark.clicked = false;\n                return bookmark;\n            }\n        });\n        this.props.bookmarkCallback(removeBar[0]);\n        console.log(removeBar, 'remove this');\n    }\n    \n    render() {\n        let bookArr = this.props.bookState.bookmarks.map((item) => {\n            let name = item.name;\n            let link = item.website;\n            let id = item.id\n            let address = item.address;\n            return (<li id={id}>Bar ~ <a href={link}>{name}</a> ~ {address}</li>)\n        });\n\n        let bookHeader = \"\";\n        let bookControl = \"\";\n        if (this.props.bookState.bookmarks.length == 0) {\n            bookHeader = \"\";\n            bookControl = \"\";\n        }\n        else {\n            bookHeader = \"Bookmarks\";\n            bookControl = \"(select bar to remove)\"\n        }\n\n        return (\n            <div className=\"bookmarks-side\">\n                <h2>{bookHeader}</h2>\n                <h5>{bookControl}</h5>\n                <div className=\"sidebox\">\n                    <ul className='links-side-list' id=\"links-list\" onClick={this.handleClick}>{bookArr}</ul>\n                </div>\n            </div>\n        );\n    }\n}\n\n// class TopThree extends Component { \n//     render() { \n//         return (); \n//     }\n// }\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}