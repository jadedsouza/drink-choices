{"ast":null,"code":"var _jsxFileName = \"/Users/jadedsouza/Desktop/group09skodawgs/src/Home.js\";\nimport React, { Component } from 'react';\nimport * as d3c from 'd3-collection';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport './index.css'; //import css file!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateSelection = selection => {\n      this.setState({\n        selectedDrink: selection\n      });\n    };\n\n    this.updateSelection = this.updateSelection.bind(this);\n    this.state = {\n      drinks: [],\n      keys: [],\n      selectedDrink: ''\n    };\n  }\n\n  componentDidMount() {\n    d3.csv('data/data.csv').then(d => {\n      this.setState({\n        drinks: d,\n        keys: d3c.keys(d[0])\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-elements\",\n      children: [/*#__PURE__*/_jsxDEV(DrinkCardRow, {\n        drink: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IntroText, {\n        selDrink: this.state.selectedDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrinkSelection, {\n        drink: this.state,\n        updateSelection: this.updateSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*function MyButton() {\n\n    let handleClick = function (event) {\n    }\n    //this.props.name, this.props.soup\n    //make a button with an `onClick` attribute!\n    //this \"registers\" the listener and sets the callback\n    return <input onClick={handleClick} type=\"submit\" className=\"submit\" value=\"Submit\" style={{ color: '#202427' }} />;\n}*/\n\nclass IntroText extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"landing-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"slogan text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Woop Woop!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"landing-instructions text\",\n        children: \"Let's figure out how to customize drinks together\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"martini-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whoosh\",\n          children: \"Let's begin.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass DrinkCard extends Component {\n  render() {\n    const mystyle = {\n      border: '1px black',\n      marginTop: '10px',\n      float: 'right'\n    };\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: mystyle,\n      children: [/*#__PURE__*/_jsxDEV(CardImg, {\n        top: true,\n        width: \"25%\",\n        src: this.props.value.image,\n        alt: \"Card image cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [\" Your Drink is: \", this.props.value.drink]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: [\" Recipe created by: \", this.props.value.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: this.props.value.link,\n            target: \"_blank\",\n            children: 'View Recipe!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass DrinkCardRow extends Component {\n  render() {\n    let drinkCardArray = this.props.drink.drinks.map(item => {\n      let drinkOption = this.props.drink.selectedDrink;\n\n      if (drinkOption.includes(item.type) && drinkOption.includes(item.mood)) {\n        return /*#__PURE__*/_jsxDEV(DrinkCard, {\n          value: item\n        }, item.drink, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this);\n      }\n    });\n    let drinkHeader = \"\";\n    let drinkOption = this.props.drink.selectedDrink;\n\n    if (drinkOption === \"\" || drinkOption === \"DEFAULT\") {\n      drinkHeader = \"\";\n    } else {\n      drinkHeader = \"Chosen Drink for you!\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drink-chosen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"header-drink-chosen\",\n        children: drinkHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), drinkCardArray]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass OneMood extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: this.props.value.mood + this.props.value.type,\n      children: [this.props.value.mood + ' ', \" \", this.props.value.type + ' beverage']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass DrinkSelection extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = item => {\n      this.props.updateSelection(item.target.value); // this.setState({selectedDrink: item.target.value});\n\n      this.selectedDrink = item.target.value;\n    };\n  }\n\n  render() {\n    // let dataItems = this.props.keys.map((item) => {\n    //     return (\n    //         <option\n    //             key={item}\n    //             text={item}\n    //             onClick={() => this.props.clickHandler(item)}>\n    //             {item}\n    //         </option>\n    //     )\n    // })\n    let moodArray = [];\n    this.props.drink.drinks.map(item => {\n      if (!moodArray.includes(item.mood)) {\n        //const handleClick = () => {this.props.updateSelection(this.props.drink.drinks.mood)\n        //this.handleClick(item.mood)\n        moodArray.push( /*#__PURE__*/_jsxDEV(OneMood, {\n          value: item\n        }, item.link, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 32\n        }, this));\n      }\n\n      return moodArray;\n    }); // let test = (this.props.drink.drinks.map((item)=> { \n    // }));\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drink-selection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid ingredients-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titles\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-9\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"moods\",\n                className: \"main-title\",\n                children: [\"How are you feeling today?\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"types\",\n                    id: \"types\",\n                    onChange: this.handleClick,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"DEFAULT\",\n                      children: '-- select a vibe --'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 45\n                    }, this), moodArray]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n\n} // class RandomSelect extends Component {\n//     randomDrink() {\n//         let drinkKeys = Object.keys(DRINKS);\n//         let num = Math.floor(Math.random() * drinkKeys.length);\n//         drinkType = drinkKeys[num];\n//         num = Math.floor(Math.random() * DRINKS[drinkType].length)\n//         if (drinkType == 'alcoholic' && num == 4) {\n//             num = num - 1;\n//         }\n//         return renderDrink(drinkType, DRINKS[drinkType][num].mood);\n//     }\n//     render() {\n//         return (\n//         );\n//     }\n// }\n\n/*class IngMidBox extends Component {\n    render() {\n        return (\n            <div className='container-fluid ingredients-box'>\n                <div className=\"row\">\n                    <div className=\"col-lg-9\">\n                        <MoodForm></MoodForm>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}*/\n\n/*class MoodForm extends Component {\n\n    render() {\n        return (\n            <form>\n                <label htmlFor=\"moods\" className=\"main-title\">How are you feeling today?</label><br />\n                <select name=\"moods\" id=\"moods\">\n                    <option disabled selected value>-- select a mood --</option>\n                </select><br />\n                <br />\n                <label htmlFor=\"types\" className=\"main-title\">What kind of drink?</label><br />\n                <select name=\"types\" id=\"types\">\n                    <option disabled selected value>-- select a type --</option>\n                </select><br />\n                <br />\n                <input type=\"submit\" className=\"submit\" value=\"Submit\" style=\"color: #202427;\" />\n            </form>\n        );\n    }\n}*/","map":{"version":3,"sources":["/Users/jadedsouza/Desktop/group09skodawgs/src/Home.js"],"names":["React","Component","d3c","d3","_","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","HomePage","constructor","props","updateSelection","selection","setState","selectedDrink","bind","state","drinks","keys","componentDidMount","csv","then","d","render","IntroText","DrinkCard","mystyle","border","marginTop","float","value","image","drink","author","link","DrinkCardRow","drinkCardArray","map","item","drinkOption","includes","type","mood","drinkHeader","OneMood","DrinkSelection","handleClick","target","moodArray","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3c from 'd3-collection';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button\n} from 'reactstrap';\nimport './index.css'; //import css file!\n\nexport class HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.updateSelection = this.updateSelection.bind(this);\n        this.state = {\n            drinks: [],\n            keys: [],\n            selectedDrink: ''\n        };\n    }\n\n    updateSelection = (selection) => {\n        this.setState({selectedDrink: selection});\n\n    }\n\n    componentDidMount() {\n        d3.csv('data/data.csv').then((d) => {\n            this.setState({ drinks: d, keys: d3c.keys(d[0]) });\n        });\n    }\n    render() {\n        return (\n            <div className=\"home-elements\">\n                <DrinkCardRow drink={this.state}/>\n                <IntroText selDrink={this.state.selectedDrink}></IntroText>\n                <br />\n                \n                <DrinkSelection drink={this.state} updateSelection={this.updateSelection} /> \n                <br />           \n            </div>\n        );\n    }\n}\n\n\n\n/*function MyButton() {\n\n    let handleClick = function (event) {\n    }\n    //this.props.name, this.props.soup\n    //make a button with an `onClick` attribute!\n    //this \"registers\" the listener and sets the callback\n    return <input onClick={handleClick} type=\"submit\" className=\"submit\" value=\"Submit\" style={{ color: '#202427' }} />;\n}*/\n\nclass IntroText extends Component {\n    render() {\n        return (\n            <div className=\"landing-text\">\n                <h1 className=\"logo text\">\n                </h1>\n                <h3 className=\"slogan text\">\n                    <span>Woop Woop!</span><span></span>\n                </h3>\n\n                <p className=\"landing-instructions text\">Let's figure out how to customize drinks together</p>\n                <div className='martini-box'>\n                    <div className='whoosh'>Let's begin.</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nclass DrinkCard extends Component {\n    render() {\n        const mystyle = {\n            border: '1px black',\n            marginTop: '10px',\n            float: 'right'\n          };\n        return (\n                <Card style={mystyle}>\n                    <CardImg top width=\"25%\" src={this.props.value.image} alt=\"Card image cap\" />\n                    <CardBody>\n                        <CardTitle> Your Drink is: {this.props.value.drink}</CardTitle>\n                        <CardText> Recipe created by: {this.props.value.author}</CardText>\n                        <Button><a href={this.props.value.link} target=\"_blank\">{'View Recipe!'}</a></Button>\n                    </CardBody>\n                </Card>\n              \n        );\n    }\n}\n\nclass DrinkCardRow extends Component {\n    render() {\n        let drinkCardArray = this.props.drink.drinks.map((item) => {\n            let drinkOption = this.props.drink.selectedDrink;          \n            if (drinkOption.includes(item.type) && drinkOption.includes(item.mood)) {\n            return (<DrinkCard value={item} key={item.drink} />);\n            }\n        })\n        let drinkHeader = \"\";\n        let drinkOption = this.props.drink.selectedDrink;     \n        \n        if (drinkOption === \"\" || drinkOption === \"DEFAULT\") {\n            drinkHeader = \"\";\n        }\n        else {\n            drinkHeader = \"Chosen Drink for you!\"\n        }\n        return (\n            <div className=\"drink-chosen\">\n                <h2 class = \"header-drink-chosen\">{drinkHeader}</h2>\n                {drinkCardArray}\n            </div>\n        );\n    }\n}\n\nclass OneMood extends Component {\n\n\n    render() {\n        return (\n            <option value={(this.props.value.mood)+(this.props.value.type)} >\n                {this.props.value.mood + ' '} {this.props.value.type + ' beverage'}\n            </option>\n        );\n    }\n}\n\n\nclass DrinkSelection extends Component {\n\n    handleClick = (item) => {\n        this.props.updateSelection(item.target.value);\n\n        // this.setState({selectedDrink: item.target.value});\n        this.selectedDrink = item.target.value;\n\n    }\n\n    render() {\n        // let dataItems = this.props.keys.map((item) => {\n        //     return (\n        //         <option\n        //             key={item}\n        //             text={item}\n        //             onClick={() => this.props.clickHandler(item)}>\n        //             {item}\n        //         </option>\n        //     )\n        // })\n        let moodArray = [];\n\n        this.props.drink.drinks.map((item) => {\n            if (!moodArray.includes(item.mood)) {\n                //const handleClick = () => {this.props.updateSelection(this.props.drink.drinks.mood)\n                //this.handleClick(item.mood)\n                moodArray.push(<OneMood value={item} key={item.link} />);\n                \n\n            }\n            return moodArray;\n\n        });\n        // let test = (this.props.drink.drinks.map((item)=> { \n        // }));\n        return (\n            <div className='drink-selection'>\n                <div className='container-fluid ingredients-box'>\n                    <div className=\"titles\">\n                        <div className=\"col-lg-9\">\n                            <form>\n                                <label htmlFor=\"moods\" className=\"main-title\">\n                                    How are you feeling today?\n                                    <div >\n                                        <select name=\"types\" id=\"types\" onChange={this.handleClick}>\n                                            <option value=\"DEFAULT\">{'-- select a vibe --'}</option>\n                                            {moodArray}\n                                        </select>\n                                    </div>\n\n                                </label><br />\n                                <br />\n                                {/* <br />\n                                <label htmlFor=\"types\" className=\"main-title\">What kind of drink?</label><br />\n                                \n                                    <option value=\"DEFAULT\" disabled>-- select a type --</option>\n                                    <option value=\"1\"> Alcoholic </option>\n                                    <option value=\"2\"> Non-Alcoholic </option>\n                                </select><br />\n                                <br /> */}\n\n                            </form>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// class RandomSelect extends Component {\n//     randomDrink() {\n//         let drinkKeys = Object.keys(DRINKS);\n//         let num = Math.floor(Math.random() * drinkKeys.length);\n//         drinkType = drinkKeys[num];\n//         num = Math.floor(Math.random() * DRINKS[drinkType].length)\n//         if (drinkType == 'alcoholic' && num == 4) {\n//             num = num - 1;\n//         }\n    \n//         return renderDrink(drinkType, DRINKS[drinkType][num].mood);\n//     }\n    \n//     render() {\n//         return (\n\n//         );\n//     }\n// }\n\n/*class IngMidBox extends Component {\n    render() {\n        return (\n            <div className='container-fluid ingredients-box'>\n                <div className=\"row\">\n                    <div className=\"col-lg-9\">\n                        <MoodForm></MoodForm>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}*/\n\n/*class MoodForm extends Component {\n\n    render() {\n        return (\n            <form>\n                <label htmlFor=\"moods\" className=\"main-title\">How are you feeling today?</label><br />\n                <select name=\"moods\" id=\"moods\">\n                    <option disabled selected value>-- select a mood --</option>\n                </select><br />\n                <br />\n                <label htmlFor=\"types\" className=\"main-title\">What kind of drink?</label><br />\n                <select name=\"types\" id=\"types\">\n                    <option disabled selected value>-- select a type --</option>\n                </select><br />\n                <br />\n                <input type=\"submit\" className=\"submit\" value=\"Submit\" style=\"color: #202427;\" />\n            </form>\n        );\n    }\n}*/\n\n\n"]},"metadata":{},"sourceType":"module"}