{"ast":null,"code":"var _jsxFileName = \"/Users/jadedsouza/Desktop/group09skodawgs/src/Home.js\";\nimport React, { Component } from 'react';\nimport * as d3c from 'd3-collection';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class HomePage extends Component {\n  constructor(props) {\n    super(props); //this.updateSelection = this.updateSelection.bind(this);\n\n    this.updateSelection = selection => {\n      console.log(\"IN UPDATE SELECTION FUNCTION \" + selection);\n    };\n\n    this.state = {\n      drinks: [],\n      keys: [],\n      selectedDrink: ''\n    };\n  }\n\n  componentDidMount() {\n    d3.csv('data/data.csv').then(d => {\n      this.setState({\n        drinks: d,\n        keys: d3c.keys(d[0])\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-elements\",\n      children: [/*#__PURE__*/_jsxDEV(IntroText, {\n        selDrink: this.state.selectedDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrinkSelection, {\n        drink: this.state,\n        updateSelection: this.updateSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(DrinkCardRow, {\n          drink: this.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*function MyButton() {\n\n    let handleClick = function (event) {\n        console.log(\"clicky clicky\");\n    }\n    //this.props.name, this.props.soup\n    //make a button with an `onClick` attribute!\n    //this \"registers\" the listener and sets the callback\n    return <input onClick={handleClick} type=\"submit\" className=\"submit\" value=\"Submit\" style={{ color: '#202427' }} />;\n}*/\n\nclass IntroText extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"landing-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo text\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drinkingchoices\",\n          children: \"Drink Choices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"slogan text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Woop Woop!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 44\n        }, this), this.props.selDrink]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"landing-instructions text\",\n        children: \"Let's figure out how to customize drinks together!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"martini-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whoosh\",\n          children: \"Let's begin.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass DrinkCard extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        border: '1px black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardImg, {\n        top: true,\n        width: \"25%\",\n        src: \"img/bobaimg.jpg\",\n        alt: \"Card image cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [\" \", this.props.value.drink]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n          tag: \"h6\",\n          className: \"mb-2 text-muted\",\n          children: this.props.value.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: this.props.value.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: this.props.value.link,\n            children: 'View Recipe!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass DrinkCardRow extends Component {\n  render() {\n    let drinkCardArray = this.props.drink.drinks.map(item => {\n      return /*#__PURE__*/_jsxDEV(DrinkCard, {\n        value: item\n      }, item.drink, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Some Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), drinkCardArray, \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass OneMood extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: this.props.value.mood,\n      children: [this.props.value.mood + ' ', \" \", this.props.value.type + ' beverage']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass DrinkSelection extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = item => {\n      console.log(\"Ive been clicked\");\n      this.props.updateSelection(item.target.value); //    this.setState({selectedDrink: item});\n    };\n  }\n\n  render() {\n    console.log(this.props.drink.drinks); // let dataItems = this.props.keys.map((item) => {\n    //     return (\n    //         <option\n    //             key={item}\n    //             text={item}\n    //             onClick={() => this.props.clickHandler(item)}>\n    //             {item}\n    //         </option>\n    //     )\n    // })\n    //  console.log(this.props.drinks.mood);\n\n    let moodArray = [];\n    this.props.drink.drinks.map(item => {\n      if (!moodArray.includes(item.mood)) {\n        //const handleClick = () => {this.props.updateSelection(this.props.drink.drinks.mood)\n        // console.log('hi issme')}; //maybe this works? lol sorry my house is noisy\n        //this.handleClick(item.mood)\n        moodArray.push( /*#__PURE__*/_jsxDEV(OneMood, {\n          value: item\n        }, item.link, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 32\n        }, this));\n      }\n\n      return moodArray;\n    }); // let test = (this.props.drink.drinks.map((item)=> { \n    //     console.log(item.mood);\n    // }));\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drink-selection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid ingredients-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-9\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"moods\",\n                className: \"main-title\",\n                children: [\"How are you feeling today?\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"types\",\n                    id: \"types\",\n                    onChange: this.handleClick,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"DEFAULT\",\n                      children: '-- select a vibe --'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 45\n                    }, this), moodArray]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*class IngMidBox extends Component {\n    render() {\n        return (\n            <div className='container-fluid ingredients-box'>\n                <div className=\"row\">\n                    <div className=\"col-lg-9\">\n                        <MoodForm></MoodForm>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}*/\n\n/*class MoodForm extends Component {\n\n    render() {\n        return (\n            <form>\n                <label htmlFor=\"moods\" className=\"main-title\">How are you feeling today?</label><br />\n                <select name=\"moods\" id=\"moods\">\n                    <option disabled selected value>-- select a mood --</option>\n                </select><br />\n                <br />\n                <label htmlFor=\"types\" className=\"main-title\">What kind of drink?</label><br />\n                <select name=\"types\" id=\"types\">\n                    <option disabled selected value>-- select a type --</option>\n                </select><br />\n                <br />\n                <input type=\"submit\" className=\"submit\" value=\"Submit\" style=\"color: #202427;\" />\n            </form>\n        );\n    }\n}*/","map":{"version":3,"sources":["/Users/jadedsouza/Desktop/group09skodawgs/src/Home.js"],"names":["React","Component","d3c","d3","_","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","HomePage","constructor","props","updateSelection","selection","console","log","state","drinks","keys","selectedDrink","componentDidMount","csv","then","d","setState","render","IntroText","selDrink","DrinkCard","border","value","drink","type","author","link","DrinkCardRow","drinkCardArray","map","item","OneMood","mood","DrinkSelection","handleClick","target","moodArray","includes","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3c from 'd3-collection';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nexport class HomePage extends Component {\n    constructor(props) {\n        super(props);\n        //this.updateSelection = this.updateSelection.bind(this);\n        this.state = {\n            drinks: [],\n            keys: [],\n            selectedDrink: ''\n        };\n    }\n\n    updateSelection = (selection) => {\n        console.log(\"IN UPDATE SELECTION FUNCTION \" + selection);\n\n    }\n\n    componentDidMount() {\n        d3.csv('data/data.csv').then((d) => {\n            this.setState({ drinks: d, keys: d3c.keys(d[0]) });\n        });\n    }\n    render() {\n        return (\n            <div className=\"home-elements\">\n                <IntroText selDrink={this.state.selectedDrink}></IntroText>\n                <br />\n                <DrinkSelection drink={this.state} updateSelection={this.updateSelection} />\n                <br />\n                <div className='row'> <DrinkCardRow drink={this.state}/></div>\n                \n\n            </div>\n        );\n    }\n}\n\n\n\n/*function MyButton() {\n\n    let handleClick = function (event) {\n        console.log(\"clicky clicky\");\n    }\n    //this.props.name, this.props.soup\n    //make a button with an `onClick` attribute!\n    //this \"registers\" the listener and sets the callback\n    return <input onClick={handleClick} type=\"submit\" className=\"submit\" value=\"Submit\" style={{ color: '#202427' }} />;\n}*/\n\nclass IntroText extends Component {\n    render() {\n        return (\n            <div className=\"landing-text\">\n                <h1 className=\"logo text\">\n                    <span className='drinkingchoices'>Drink Choices</span>\n                </h1>\n                <h3 className=\"slogan text\">\n                    <span>Woop Woop!</span><span></span>\n                    {this.props.selDrink}\n                </h3>\n\n                <p className=\"landing-instructions text\">Let's figure out how to customize drinks together!</p>\n                <div className='martini-box'>\n                    <div className='whoosh'>Let's begin.</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nclass DrinkCard extends Component {\n    render() {\n        return (\n                <Card style={{border: '1px black'}}>\n                    <CardImg top width=\"25%\" src='img/bobaimg.jpg' alt=\"Card image cap\" />\n                    <CardBody>\n                        <CardTitle> {this.props.value.drink}</CardTitle>\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{this.props.value.type}</CardSubtitle>\n                        <CardText>{this.props.value.author}</CardText>\n                        <Button><a href={this.props.value.link}>{'View Recipe!'}</a></Button>\n                    </CardBody>\n                </Card>\n              \n        );\n    }\n}\n\nclass DrinkCardRow extends Component {\n    render() {\n        let drinkCardArray = this.props.drink.drinks.map((item) => {\n            return (<DrinkCard value={item} key={item.drink} />);\n        })\n        return (\n            <div>\n                <h2>Some Options</h2>\n                {drinkCardArray};\n            </div>\n        );\n    }\n}\n\nclass OneMood extends Component {\n\n\n    render() {\n        return (\n            <option value={this.props.value.mood}>\n                {this.props.value.mood + ' '} {this.props.value.type + ' beverage'}\n            </option>\n        );\n    }\n}\n\n\nclass DrinkSelection extends Component {\n\n    handleClick = (item) => {\n        console.log(\"Ive been clicked\");\n        this.props.updateSelection(item.target.value);\n\n        //    this.setState({selectedDrink: item});\n    }\n\n    render() {\n        console.log(this.props.drink.drinks);\n        // let dataItems = this.props.keys.map((item) => {\n        //     return (\n        //         <option\n        //             key={item}\n        //             text={item}\n        //             onClick={() => this.props.clickHandler(item)}>\n        //             {item}\n        //         </option>\n        //     )\n        // })\n        //  console.log(this.props.drinks.mood);\n        let moodArray = [];\n\n        this.props.drink.drinks.map((item) => {\n            if (!moodArray.includes(item.mood)) {\n                //const handleClick = () => {this.props.updateSelection(this.props.drink.drinks.mood)\n                // console.log('hi issme')}; //maybe this works? lol sorry my house is noisy\n                //this.handleClick(item.mood)\n                moodArray.push(<OneMood value={item} key={item.link} />);\n\n            }\n            return moodArray;\n\n        });\n        // let test = (this.props.drink.drinks.map((item)=> { \n        //     console.log(item.mood);\n        // }));\n        return (\n            <div className='drink-selection'>\n                <div className='container-fluid ingredients-box'>\n                    <div className=\"row\">\n                        <div className=\"col-lg-9\">\n                            <form>\n                                <label htmlFor=\"moods\" className=\"main-title\">\n                                    How are you feeling today?\n                                    <div >\n                                        <select name=\"types\" id=\"types\" onChange={this.handleClick}>\n                                            <option value=\"DEFAULT\">{'-- select a vibe --'}</option>\n                                            {moodArray}\n                                        </select>\n                                    </div>\n\n                                </label><br />\n                                <br />\n                                {/* <br />\n                                <label htmlFor=\"types\" className=\"main-title\">What kind of drink?</label><br />\n                                \n                                    <option value=\"DEFAULT\" disabled>-- select a type --</option>\n                                    <option value=\"1\"> Alcoholic </option>\n                                    <option value=\"2\"> Non-Alcoholic </option>\n                                </select><br />\n                                <br /> */}\n\n                            </form>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n/*class IngMidBox extends Component {\n    render() {\n        return (\n            <div className='container-fluid ingredients-box'>\n                <div className=\"row\">\n                    <div className=\"col-lg-9\">\n                        <MoodForm></MoodForm>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}*/\n\n/*class MoodForm extends Component {\n\n    render() {\n        return (\n            <form>\n                <label htmlFor=\"moods\" className=\"main-title\">How are you feeling today?</label><br />\n                <select name=\"moods\" id=\"moods\">\n                    <option disabled selected value>-- select a mood --</option>\n                </select><br />\n                <br />\n                <label htmlFor=\"types\" className=\"main-title\">What kind of drink?</label><br />\n                <select name=\"types\" id=\"types\">\n                    <option disabled selected value>-- select a type --</option>\n                </select><br />\n                <br />\n                <input type=\"submit\" className=\"submit\" value=\"Submit\" style=\"color: #202427;\" />\n            </form>\n        );\n    }\n}*/\n\n\n"]},"metadata":{},"sourceType":"module"}